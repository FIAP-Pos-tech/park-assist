name: "Deploy GCP"

on:
  push:
    branches:
      - deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: chmod +x mvnw && ./mvnw clean package -DskipTests

      - name: Build Docker image
        run: |
          docker build -t park-assist:${{ github.sha }} .

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.2.0
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Build Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/park-assist:${{ github.sha }} .

      - name: Push Docker image to GCR
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/park-assist:${{ github.sha }}

      - name: Install Kubectl
        run: |
          sudo apt-get install kubectl

      - name: Replace Placeholders
        run: |
          sed -i -e "s/GITSHA/${{ github.sha }}/g" k8s/deployment.yaml \
                 -e "s/GCP_PROJECT_ID/${{ secrets.GCP_PROJECT_ID }}/g" k8s/deployment.yaml \
                 -e "s/GKE_ZONE/${{ secrets.GKE_ZONE }}/g" k8s/deployment.yaml

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/lb.yaml
